name: "Build"
on:
  pull_request:
  push:
    branches:
      - master
    tags:
    - '*'

jobs:
  generate-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.generate-version.outputs.version }}
    steps:
      - name: Detect Version
        id: generate-version
        run: |
          $ref = '${{ github.ref }}'
          if ($ref.StartsWith('refs/tags/'))
          {
              $version = ($ref -split '/' | Select-Object -Last 1)
              $isPublicBuild = $true
          }
          else
          {
              $version = "0.0.1"
              $isPublicBuild = $false
          }
          Write-Host "Detected version: '$version'."
          Write-Host "::set-output name=version::$version"
        shell: pwsh

  build:
    runs-on: ubuntu-latest
    needs: generate-version
    env:
      BUILD_VERSION: ${{ needs.generate-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Login (Dockerhub)
        uses: docker/login-action@v2
        if: ${{ needs.generate-version.outputs.version != '0.0.1' }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: silvenga/emissary
          tags: |
              type=semver,pattern={{version}},value=${{ env.BUILD_VERSION }}
              type=semver,pattern={{major}}.{{minor}},value=${{ env.BUILD_VERSION }}
              type=semver,pattern={{major}},value=${{ env.BUILD_VERSION }}
              type=raw,latest

      - uses: docker/build-push-action@v3
        id: build
        with:
          file: Dockerfile
          context: .
          push: ${{ needs.generate-version.outputs.version != '0.0.1' }}
          build-args: |
            BUILD_VERSION=${{ env.BUILD_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}